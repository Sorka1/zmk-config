/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

	behaviors {
        th_tap: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ALT  |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  .  | '/"  |
// | GUI  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  | :/; | ?/! | ESC  |
//                    | LWR | SHFT | SPC |   | ENT | BSPC  | UPR |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp RALT
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp DOT   &th_tap SQT DQT
   &kp LGUI &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &th_tap SEMI COLON  &th_tap EXCL QMARK  &kp ESC
                  &mo 1  &kp LSHIFT &kp SPACE   &kp RET &kp BSPC &mo 2
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ALT  |
// | CTRL |  @  |  &  |  *  |  /  |     |   | LFT | DWN |  UP | RGT |  (  |   )  |
// | CAPS |  ^  |  #  |  $  |  %  |  ~  |   |  -  |  +  |  =  |  _  |     |      |   
//                    | LWR | SHFT | SPC |   | ENT | DEL  | UPR |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp RALT
   &kp LCTRL &kp AT &kp AMPS  &kp STAR &kp FSLH &kp RPAR   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LPAR &kp RPAR
   &kp CAPS  &kp CARET &kp HASH &kp DLLR &kp PRCNT &kp TILDE2          &kp MINUS &kp PLUS   &kp EQUAL &kp UNDER    &trans &trans
                  &mo 1  &kp LSHIFT &kp SPACE   &kp RET &kp DEL &mo 2
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | RALT |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  [  |  ]  |  /  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | BSPC |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp RALT
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp FSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp BSPC
                        >;
                };
        };
};
